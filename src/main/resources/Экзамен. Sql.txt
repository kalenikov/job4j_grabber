1. Что такое первичный ключ?

    ПК -- уникальный идентификатор строки, который однозначно характеризует запись таблицы.

    Первичные ключи должны содержать уникальные значения
    Первичный ключ столбец не может иметь значения NULL
    Таблица может иметь только один первичный ключ

    ПК
        естественный -- когда ПК уже содержится в данных (номер телефона, вин-код авто) 
        суррогатный -- когда ПК добавлен искусственно (id).
        составной -- когда используются несколько полей  


    В качестве первичного ключа выбирают тот, который имеет наименьший размер (физического хранения) и/или включает наименьшее количество атрибутов. 
    Либо -- сохранение его уникальности со временем. Поэтому в качестве первичного ключа стараются выбирать такой потенциальный ключ, который с наибольшей вероятностью никогда не утратит уникальность.

2. Что такое внешний ключ?
    ВК — столбец (или комбинация) значения которых соответствуют ПК в другой таблице. 
    Связь между двумя таблицами задается через соответствие ПК в одной из таблиц ВК во второй.

3. Что такое нормализация БД

    Нормализация - это преобразования таблиц БД к виду, отвечающему нормальным формам.
    Не имеет целью уменьшение или увеличение производительности работы или же уменьшение или увеличение физического объёма базы данных. 

    Целью нормализации является уменьшение потенциальной противоречивости хранимой в базе данных информации и исключение из таблиц избыточных данных.
    
    Итого:
        Её целью является сохранить данные только один раз, но в нужном месте.

        Нормализованная база данных исключает дублирование и многократное обслуживание данных, а также появление проблем с целостностью данных, возникающих при повторном вводе одинаковых данных.

    Нормальные формы
            1 -- все значения в ячейках (их в теории называют атрибуты) должны быть атомарными, то есть содержать ровно одно неделимое значение, а не список из нескольких значений.

            2 -- все поля в таблице должны полностью зависеть от первичного ключа целиком, а не от его части
                Обычно это требование применяется только тогда, когда первичный ключ составной и содержит 2 или больше колонок. В этом случае, если какие-то значения в таблице зависят только от части ключа, то они могут повторяться, и их надо вынести в отдельную таблицу. Если первичный ключ - это одно поле, то таблица уже соответствует требованию.
            3 -- значения полей должны зависеть только от первичного ключа, а не от других полей

    Что будет, если не соблюдать требования нормализации
        будет неудобно писать некоторые запросы к таблицам
        данные будут дублироваться, что может привести к тому, что в одном месте будет одно значение, а в другом - другое и непонятно, какое из них правильное

4. Что такое денормализация БД? Для чего она нужна?
    Это намеренное нарушение нормальных форм, для увеличения производительности за счёт добавления избыточных данных.

    Денормализация нужна для:
        -- Повышения производительности запросов за счет экономии на объединениях
        -- Предварительных вычислений часто запрашиваемых значений
        -- Для сохранения истории
    (пример контактная информация)

5. Что такое кластерный и некластерный индекс?
    Вообще, индекс - это объект для ускорения поиска данных (подобно содержанию в книге, индекс в БД позволяет быстро искать конкретные сведения в таблице).

    Нужны для -- позволит выполнять запросы быстро и уменьшать негативное влияние блокировок на производительность в многопользовательском режиме.

    Связан с конкретным столбцом (или столбцами) таблицы, но является самостоятельным объектом БД

    Недостатки индексов:
        -- индексы занимают дополнительное место на диске и в оперативной памяти. 
        -- замедляются операции вставки, обновления и удаления записей.

    Некластерный (обычнй) -- на уровне листьев хранит ссылку на данные.
        Некластерные индексы – не перестраивают физическую структуру таблицы, а лишь организуют ссылки на соответствующие строки.
        Некластерных индексов может быть несколько для одной таблицы.

    Кластерный -- на уровне листьев хранит данные (индекс смешанный с таблицей), кластерный может быть только один.
        Кластерный --  хранит не только значения колонки в отсортированном виде, а и данные всей строки. Это позволяет минимизировать количество операций чтения с диска при работе с таким индексом.
        Принципиальным отличием кластерного индекса от индексов других типов является то, что при его определении в таблице физическое расположение данных перестраивается в соответствии со структурой индекса. Логическая структура таблицы в этом случае представляет собой скорее словарь, чем индекс. Данные в словаре физически упорядочены, например по алфавиту.
        Кластерный индекс может включать несколько столбцов.
        Кластерные индексы могут дать существенное увеличение производительности поиска данных даже по сравнению с обычными индексами. Увеличение производительности особенно заметно при работе с последовательными данными. Если в таблице определен некластерный индекс, то сервер должен сначала обратиться к индексу, а затем найти нужную строку в таблице. При использовании кластерных индексов следующая порция данных располагается сразу после найденных ранее данных. Благодаря этому отпадают лишние операции, связанные с обращением к индексу и новым поиском нужной строки в таблице.
    
        Необходимо избегать создания кластерного индекса для часто изменяемых столбцов, поскольку сервер должен будет выполнять физическое перемещение всех данных в таблице, чтобы они находились в упорядоченном состоянии, как того требует кластерный индекс. Для интенсивно изменяемых столбцов лучше подходит некластерный индекс.
  

6. Какие типы соединений (join) таблиц существуют? В чем их разница?
    inner -- совпадающие строки
    left /right outer -- все данные из внешней таблицы, дополнить null не найденные
    full -- объединение двух таблиц
    cross -- декартово произведение

7. Что такое SQL курсор? 
    (указатель на позицию в результирующем наборе)
    Курсор в SQL – это временная выборка записей в процессе выполнения функции, над которой могут выполняться необходимые Вам действия, данная выборка является указателем на область памяти.

    Вместо того чтобы сразу выполнять весь запрос, есть возможность настроить курсор, инкапсулирующий запрос, и затем получать результат запроса по нескольку строк за раз. Одна из причин так делать заключается в том, чтобы избежать переполнения памяти, когда результат содержит большое количество строк. 

8. Опишите шаги по созданию и использованию курсора?
    При работе с курсорами используются следующие команды.

    1 Объявление курсора: DECLARE имя_курсора CURSOR FOR SELECT текст_запроса Любой курсор создается на основе некоторого оператора SELECT.

    2 (можно сразу открывать без объявления) Открытие курсора: OPEN имя_курсора Для того чтобы с помощью курсора можно было читать строки, его надо обязательно открыть.

    3 Чтение следующей строки из курсора: FETCH имя_курсора INTO список_переменных 
    Переменные в списке должны быть в том же количестве и того же типа, что и столбцы курсора. (+ global  @@FETCH_STATUS) 

    4 Закрытие курсора: CLOSE имя_курсора

    5 Для удаления курсора из памяти используется команда DEALLOCATE имя_курсора


10. Что такое транзакция?
    Транзакция - это группа последовательных операций с базой данных, которая представляет собой логическую единицу работы с данными.

    Транзакция может быть выполнена либо целиком и успешно, либо не выполнена вообще, и тогда она не должна произвести никакого эффекта.

    Свойства ACID

    -- Atomicity -- атомарность обеспечивает неделимость операций, который модифицирует данные в БД 
        Т.е. или выполняются все изменения данных в транзакции, или в случае любой ошибки происходит откат всех выполненных изменений. 
    
    -- Consistency -- согласованность. Выполняемые транзакцией трансформации данных переводят базу данных из одного согласованного состояния в другое.
    
    -- Isolation -- изолированность отделяет все параллельные транзакции друг от друга, т.е. активная транзакция не может видеть модификации данных в параллельной или незавершенной транзакции. 
    
    -- Durability -- долговечность обеспечивает сохраняемость данных. Т.е. эффект транзакции должен оставаться действенным даже в случае системной ошибки. 

11. Что такое триггер? (Какие типы триггеров вы знаете?)
    Триггер является указанием, что СУБД  должна автоматически выполнить некоторые дейстия при наступления некоторых услових (всякий раз когда выполнен определённый тип операции) 
    Триггеры можно использовать с таблицами, с представлениями и с внешними таблицами.

    События:
        ddl_command_start -- перед выполнением команд CREATE, ALTER, DROP, SECURITY LABEL, COMMENT, GRANT и REVOKE
        ddl_command_end -- происходит непосредственно после выполнения команд из того же набора. 
        sql_drop -- перед событием ddl_command_end для команд удаленя
        table_rewrite -- после того, как таблица будет перезаписана в результате ALTER TABLE и ALTER TYPE

    PostgreSQL предлагает как построчные триггеры, так и операторные триггеры.
        построчные -- триггерная функция вызывается один раз для каждой строки, затронутой оператором, запустившим триггер
        операторный триггер -- вызывается только один раз при выполнении соответствующего оператора, независимо от количества строк, которые он затрагивает

    Триггеры также классифицируются в соответствии с тем, срабатывают ли они до, после или вместо операции. 

12. В чем разница между WHERE и HAVING?
    WHERE - сначала отбирает строки а потом применяет к ним GROUP BY и агрегатные функции типа COUNT(*).
    HAVING - наоборот сначала все функции и группировки, а потом выборка.


13. Что такое подзапрос (sub-query)?
    Запрос внутри запроса.
    Подзапрос - это внутренний или вложенный запрос, который выполнится перед основным и результаты которого будут теми данными, из которых будет дальнейшая обработка основным запросом. 

    Обычно, подзапрос используется в конструкции WHERE, когда вы можете получить значение с помощью запроса, но не знаете конкретного результата.

    Операторы:
        EXISTS
        IN
        NOT IN
        ANY/SOME
        ALL

14. Что такое union? (+ UNION ALL)
    UNION применяется для объединения двух наборов строк
    Оба запроса должны возвращать одинаковое число столбцов, и столбцы с одинаковым порядковым номером должны иметь совместимые типы данных.

    При объединении нескольких запросов подряд результат последовательно вычисляется слева направо.


15. Что такое group by
    Оператор GROUP BY используется для определения групп выходных строк, к которым могут применяться агрегатные функции (COUNT, MIN, MAX, AVG и SUM). 
    Все столбцы списка SELECT, не вошедшие в агрегатные функции, должны быть указаны в предложении GROUP BY.
    В результате чего все выходные строки запроса разбиваются на группы, характеризуемые одинаковыми комбинациями значений в этих столбцах. После чего к каждой группе будут применены агрегатные функции. Следует иметь в виду, что для GROUP BY все значения NULL трактуются как равные, то есть при группировке по полю, содержащему NULL-значения, все такие строки попадут в одну группу.


    COUNT(*) Возвращает количество строк источника записей.
    COUNT Возвращает количество значений в указанном столбце.
    SUM Возвращает сумму значений в указанном столбце.
    AVG Возвращает среднее значение в указанном столбце.
    MIN Возвращает минимальное значение в указанном столбце.
    MAX Возвращает максимальное значение в указанном столбце.

17. Что такое хранимые процедуры?
    Объект -- представляет собой набор SQL-команд, который компилируется один раз и хранится на сервере.
    XП похожи на обыкновенные процедуры языков высокого уровня, у них могут быть вх-вых параметры и локальные переменные, в них могут производиться вычисления и операции над строками, результаты которых могут присваиваться переменным и параметрам, возможны циклы и условия
    В хранимых процедурах могут выполняться как DDL, так и DML.

18. Что такое view(Представление)?
    объект, в котором мы можем заранее описать запрос, а потом обраттся и получить данные
    Представление (VIEW) — объект базы данных, являющийся результатом выполнения запроса к базе данных, определенного с помощью оператора SELECT, в момент обращения к представлению. Представления иногда называют «виртуальными таблицами». Такое название связано с тем, что представление доступно для пользователя как таблица, но само оно не содержит данных, а извлекает их из таблиц в момент обращения к нему.

    ПРЕДСТАВЛЕНИЕ (VIEW) - ОБЪЕКТ ДАННЫХ КОТОРЫЙ не содержит никаких данных его владельца. Это - тип таблицы, чье содержание выбирается из других таблиц с помощью выполнения запроса.

19. Опишите процесс создания запроса через JDBC

    JDBC – это стандарт взаимодействия приложения с различными СУБД. 
    JDBC основан на концепции драйверов, позволяющей получать соединение с БД по специальному URL.
    С помощью JDBC можно создавать соединения с БД, выполнять SQL-запросы, хранимые процедуры и обрабатывать результаты. 
    JDBC API упрощает работу с базами данных из Java программ.
    JDBC API Statement используется для выполнения SQL запросов к базе данных.


    1 load database driver
    2 getting connection DriverManager.getConnection(url, login, pass)
    3 createStatement \ prepareStatement
    4 ResultSet rs = execute | executeQuery | executeUpdate
        while (rs.next) 
            rs.getString(1)
    5 rs.close
      connection.close()

20. Для чего используется конструкция try-with-resources
    java 7, она позволяет использовать блок try-catch не заботясь о закрытии ресурсов (Autocloseable), используемых в данном сегменте кода. 
    Ресурсы объявляются в блоке try, а компилятор сам неявно создаёт секцию finally в которой и происходит закрытие без участия разработчика. 